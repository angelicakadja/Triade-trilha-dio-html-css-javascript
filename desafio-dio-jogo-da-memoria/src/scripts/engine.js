const emojis = [
  "üß¨",
  "üß¨",
  "üöó",
  "üöó",
  "üéÑ",
  "üéÑ",
  "üçî",
  "üçî",
  "üåª",
  "üåª",
  "‚òÉÔ∏è",
  "‚òÉÔ∏è",
  "üòé",
  "üòé",
  "ü¶í",
  "ü¶í",
]; // Guardar os emojis

let openCards = []; // Armazenar os emojis que forem sendo abertos

let randomEmojis = emojis.sort(() => (Math.random() > 0.5 ? 2 : -1));
// Guardar os emojis de forma aleat√≥ria.
// Sort permite criar uma ordena√ß√£o de alguma regra predefinida passada dentro dele.
// Invoquei a biblioteca Math para fazer o random.
// Utilizei o m√©todo random, atrav√©s do if tern√°rio '*'.
//          Se o n¬∞ aleat√≥rio for > 0.5, joguei um 2, caso n√£o -1.
//          Peso de 2 vai pra frente e peso de -1 vai para tr√°s.
//          Como ter√° mais de 1 elemento com peso 2, ele vai ordenar por ordem de chegada.
// * Uso if tern√°rio: condition ? expr1 : expr2. Express√£o avaliada como true ou false.
//   Se condition √© true, o operador retornar√° o valor de expr1, caso n√£o, retorna o valor de expr2.

// Desenhar os elementos na tela, atrav√©s do for.
// O uso do .length junto da vari√°vel declarada √© para que o i fa√ßa o loop at√© a quantidade de emojis declarados na constante.
// O i++ √© para incrementar o loop de 1 em 1.
for (let i = 0; i < emojis.length; i++) {
  let box = document.createElement("div");
  box.className = "item";
  box.innerHTML = randomEmojis[i];
  box.onclick = handleClick; // Esse onclick √© para criar a fun√ß√£o clicar, toda vez que clicar, ele chamar√° a fun√ß√£o criada handleClick.
  document.querySelector(".game").appendChild(box);
  // document.createElement √© para criar dinamicamente as caixinhas atrav√©s do elemento chamado 'div', que aparecer√£o na tela.
  // Associei a class item no box.className.
  // box.innerHTML √© para pegar a vari√°vel declarada de emojis.
}

function handleClick() {
  if (openCards.length < 2) {
    // Essa primeira a√ß√£o √© para saber se s√≥ tem duas cartas abertas.
    this.classList.add("boxOpen"); // Essa class √© para toda vez que um card for aberto.
    openCards.push(this);
  }
  if (openCards.length == 2) {
    setTimeout(checkMatch, 500);
  } // Comparar se as cartas abertas s√£o iguais.
}

function checkMatch() {
  if (openCards[0].innerHTML === openCards[1].innerHTML) {
    openCards[0].classList.add("boxMatch");
    openCards[1].classList.add("boxMatch");
  } else {
    openCards[0].classList.remove("boxOpen");
    openCards[1].classList.remove("boxOpen");
  }

  openCards = [];

  if (document.querySelectorAll(".boxMatch").length === emojis.length) {
    alert("Voc√™ venceu !");
  }
}

audio = document.getElementById("audio");

function play() {
  audio.play();
}

function stop() {
  audio.pause();
  audio.currentTime = 0;
}

function diminuir_volume() {
  if (audio.volume > 0) audio.volume -= 0.1;
}
